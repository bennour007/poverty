dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_sp %>% as_tibble()
county_sp@data
county_sp@data %>% as_tibble()
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county))
unnested_states <- unnested_data %>%
add_row(county = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county)) %>%
rename(gov_name_f = "state")
unnested_states <- unnested_data %>%
add_row(county = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
unnested_states$county[unnested_states$county == "sidi ali ben nasrallah"] <- "nasrallah"
nested_states <- unnested_states %>%
nest_by(gov_name_f)
county_matched <- states_matched
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_matched %>%
left_join(unnested_data)
county_matched %>%
left_join(unnested_data, by = gov_name_f)
unnested_data
county_matched %>%
right_join(unnested_data, by = gov_name_f)
county_matched %>%
right_join(unnested_data)
county_matched
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county)) %>%
rename(gov_name_f = "state", deleg_na_1 = "county")
unnested_states <- unnested_data %>%
add_row(deleg_na_1 = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
unnested_states$deleg_na_1[unnested_states$deleg_na_1 == "sidi ali ben nasrallah"] <- "nasrallah"
nested_states <- unnested_states %>%
nest_by(gov_name_f)
county_matched <- states_matched
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = deleg_na_1,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county)) %>%
rename(gov_name_f = "state")
unnested_states <- unnested_data %>%
add_row(county = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
unnested_states$county[unnested_states$county == "sidi ali ben nasrallah"] <- "nasrallah"
nested_states <- unnested_states %>%
nest_by(gov_name_f)
county_matched <- states_matched
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
unnested_data
unnested_data %>%
rename(deleg_na_1 = "county")
county_matched %>%
left_join(unnested_data %>%
rename(deleg_na_1 = "county"))
county_sp@data <- county_matched %>%
left_join(unnested_data %>%
rename(deleg_na_1 = "county"))
county_sp@data %>% as_tibble()
county_sp %>%
tidy(region = "adm_id")
county_sp %>%
tidy(region = "id")
county_matched %>%
select(id, PK_UID, code_circo, id_1, d_2, circo_id, adm_id)
county_matched %>%
select(id, PK_UID, code_circo, id_1, id_2, circo_id, adm_id)
county_sp %>% tidy()
county_sp %>% tidy() %>%
select(id) %>% unique
county_matched %>%
select(id, PK_UID, code_circo, id_1, id_2, circo_id, adm_id) %>%
select(id) %>%
unique
county_sp %>% tidy() %>%
select(id) %>% unique
county_matched %>%
select(deleg_id) %>%
unique
county_sp %>% tidy() %>%
select(id) %>% unique
county_sp %>% tidy() %>%
select(id) %>% unique %>% view()
county_sp %>%
tidy()
county_matched %>%
select(deleg_id) %>%
unique
county_matched %>% view()
################################################################################
library(geojsonio)
library(tidyverse)
library(clue)
library(broom)
library(TripleR)
library(stringdist)
library(widyr)
################################################################################
source("mapping/geojson.R")
source("mapping/data_prep.R")
#source("mapping/functions.R")
################################################################################
county_sp <- geojson_read(county_url,  what = "sp")
################################################################################
################################################################################
# STATE NAMES
# State names of our data
da_states <- data[1:24] %>%
bind_rows() %>%
pull(state) %>%
unique()
################################################################################
################################################################################
states_matched <- county_sp %>%
as_tibble() %>%
mutate(matchy = map(gov_name_f, function(.) rep(., 24) %>%
as_tibble_col("reps"))) %>%
mutate(matchy = map(matchy, function(.) mutate(., da_states))) %>%
mutate(matchy = map(matchy, function(.) mutate(., dist = stringdist(a = reps,
b = da_states,
method = "jaccard")))) %>%
mutate(matchy = map(matchy, function(.) filter(., dist == min(.$dist)))) %>%
unnest("matchy") %>%
mutate(gov_name_f = da_states) %>%
select(-reps, -da_states, -dist)
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county)) %>%
rename(gov_name_f = "state")
unnested_states <- unnested_data %>%
add_row(county = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
# This is a mistake from the data I have, the name has been changed in the early 2000
unnested_states$county[unnested_states$county == "sidi ali ben nasrallah"] <- "nasrallah"
nested_states <- unnested_states %>%
nest_by(gov_name_f)
county_matched <- states_matched
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
source("/mapping/sp_data_prep.R")
source("/mapping/sp_data_prep.R")
source("mapping/sp_data_prep.R")
county_matched
county_matched %>%
select(PK_UID) %>%
unique
county_matched %>%
select(PK_UID) %>%
unique %>% view()
county_sp %>%
tidy()
county_sp %>%
tidy() %>%
select(id) %>%
unique
county_matched
county_matched %>%
select(adm_id) %>%
unique %>% view()
county_sp %>%
tidy() %>%
select(id) %>%
unique %>%
view()
county_sp %>%
tidy(reion = "PK_UID")
geom_polygon()
county_sp %>%
tidy(reion = "PK_UID") %>%
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon()
county_sp %>%
tidy(reion = "id") %>%
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon()
county_sp %>%
tidy(reion = "id") %>%
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(color = 'pink')
county_sp %>%
tidy(reion = "PK_UID") %>%
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(color = 'pink')
county_matched %>%
left_join(unnested_data)
county_matched %>%
left_join(unnested_data, by = "gov_name_f")
unnested_data
county_matched %>%
left_join(unnested_data %>%
rename(deleg_na_1 = "county"), by = "gov_name_f")
county_matched %>%
left_join(unnested_data %>%
rename(deleg_na_1 = "county"))
county_sp@data <- county_matched %>%
left_join(unnested_data %>%
rename(deleg_na_1 = "county"))
county_sp %>%
tidy(reion = "PK_UID") %>%
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(color = 'pink', fill = dropout_rate_secondary)
county_sp %>%
tidy(reion = "PK_UID") %>%
ggplot() +
geom_polygon(aes(x = long,
y = lat,
group = group,
color = 'pink',
fill = dropout_rate_secondary))
county_sp %>%
tidy(reion = "PK_UID")
library(sf)
trah <- read_sf(county_url)
trah
trah %>% st_centroid()
trah %>% st_centroid() %>%
bind_cols() %>%
ggplot(trah) +
geom_sf()
ggplot(trah) +
geom_sf()
library(sf)
county_sp <- read_sf(county_url,  what = "sp")
county_sp <- read_sf(county_url)
da_states <- data[1:24] %>%
bind_rows() %>%
pull(state) %>%
unique()
county_sp %>%
as_tibble()
county_sp
states_matched <- county_sp %>%
as_tibble() %>%
mutate(matchy = map(gov_name_f, function(.) rep(., 24) %>%
as_tibble_col("reps"))) %>%
mutate(matchy = map(matchy, function(.) mutate(., da_states))) %>%
mutate(matchy = map(matchy, function(.) mutate(., dist = stringdist(a = reps,
b = da_states,
method = "jaccard")))) %>%
mutate(matchy = map(matchy, function(.) filter(., dist == min(.$dist)))) %>%
unnest("matchy") %>%
mutate(gov_name_f = da_states) %>%
select(-reps, -da_states, -dist)
################################################################################
################################################################################
unnested_data <- data[1:24] %>%
bind_rows() %>%
mutate(county =tolower(county)) %>%
rename(gov_name_f = "state")
unnested_states <- unnested_data %>%
add_row(county = "unkown", gov_name_f = "Monastir") # Found another mistake in the data, a water body affected as delegation
unnested_states$county[unnested_states$county == "sidi ali ben nasrallah"] <- "nasrallah"
nested_states <- unnested_states %>%
nest_by(gov_name_f)
county_matched <- states_matched
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
rlang::last_error()
rlang::last_trace()
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y)))
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw"))))
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist))))
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data")
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county)
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_matched[county_matched$engtype_2 == "Delegation",] <- county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county) %>%
select(1:21)
county_matched[county_matched$engtype_2 == "Delegation",]
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data") %>%
mutate(deleg_na_1 = county)
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist))))
county_matched[county_matched$engtype_2 == "Delegation",] %>%
mutate(deleg_na_1 = tolower(deleg_na_1)) %>%
mutate(deleg_na_1 = if_else(deleg_na_1 %>% is.na(), "unkown", deleg_na_1)) %>%
left_join(nested_states, by = "gov_name_f") %>%
mutate(nums = map_dbl(data, function(.) nrow(.))) %>%
mutate(reps = map2(deleg_na_1, nums, function(x,y) rep(x,y) %>% as_tibble_col("repeated_names"))) %>%
mutate(data = map2(data,reps, function(x,y)  bind_cols(x,y))) %>%
mutate(data = map(data, function(.) mutate(.,
dist = stringdist(a = county,
b = repeated_names,
method = "jw")))) %>%
mutate(data = map(data, function(.) filter(., dist == min(.$dist)))) %>%
unnest("data")
